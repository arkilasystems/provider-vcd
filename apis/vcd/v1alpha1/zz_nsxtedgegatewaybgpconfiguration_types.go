// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type NsxtEdgegatewayBgpConfigurationInitParameters struct {

	// - A flag indicating whether ECMP is enabled or not
	// Defines if ECMP (Equal-cost multi-path routing) is enabled
	EcmpEnabled *bool `json:"ecmpEnabled,omitempty" tf:"ecmp_enabled,omitempty"`

	// The ID of the Edge Gateway (NSX-T only). Can be looked up using
	// vcd_nsxt_edgegateway datasource
	// Edge gateway ID for BGP Configuration
	EdgeGatewayID *string `json:"edgeGatewayId,omitempty" tf:"edge_gateway_id,omitempty"`

	// Defines if BGP service is enabled or not
	// Defines if BGP service is enabled
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// - Describes Graceful Restart configuration Modes for BGP
	// configuration on an Edge Gateway. Read only for VRF backed Edge Gateways. Possible options are:
	// Graceful restart configuration on Edge Gateway. One of 'DISABLE', 'HELPER_ONLY', 'GRACEFUL_AND_HELPER'
	GracefulRestartMode *string `json:"gracefulRestartMode,omitempty" tf:"graceful_restart_mode,omitempty"`

	// Maximum time taken (in seconds) for a BGP session to be
	// established after a restart. If the session is not re-established within this timer, the receiving
	// speaker will delete all the stale routes from that peer. Read only for VRF backed Edge Gateways.
	// Maximum time taken (in seconds) for a BGP session to be established after a restart
	GracefulRestartTimer *float64 `json:"gracefulRestartTimer,omitempty" tf:"graceful_restart_timer,omitempty"`

	// BGP autonomous systems (AS) number to advertise to BGP peers. BGP
	// AS number can be specified in either ASPLAIN or ASDOT formats, like ASPLAIN format : '65546',
	// ASDOT format : '1.10'. Read only for VRF backed Edge Gateways
	// Autonomous system number
	LocalAsNumber *string `json:"localAsNumber,omitempty" tf:"local_as_number,omitempty"`

	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organisations
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations
	Org *string `json:"org,omitempty" tf:"org,omitempty"`

	// - Maximum time (in seconds) before stale routes are removed when
	// BGP restarts. Read only for VRF backed Edge Gateways
	// Maximum time (in seconds) before stale routes are removed when BGP restarts
	StaleRouteTimer *float64 `json:"staleRouteTimer,omitempty" tf:"stale_route_timer,omitempty"`
}

type NsxtEdgegatewayBgpConfigurationObservation struct {

	// - A flag indicating whether ECMP is enabled or not
	// Defines if ECMP (Equal-cost multi-path routing) is enabled
	EcmpEnabled *bool `json:"ecmpEnabled,omitempty" tf:"ecmp_enabled,omitempty"`

	// The ID of the Edge Gateway (NSX-T only). Can be looked up using
	// vcd_nsxt_edgegateway datasource
	// Edge gateway ID for BGP Configuration
	EdgeGatewayID *string `json:"edgeGatewayId,omitempty" tf:"edge_gateway_id,omitempty"`

	// Defines if BGP service is enabled or not
	// Defines if BGP service is enabled
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// - Describes Graceful Restart configuration Modes for BGP
	// configuration on an Edge Gateway. Read only for VRF backed Edge Gateways. Possible options are:
	// Graceful restart configuration on Edge Gateway. One of 'DISABLE', 'HELPER_ONLY', 'GRACEFUL_AND_HELPER'
	GracefulRestartMode *string `json:"gracefulRestartMode,omitempty" tf:"graceful_restart_mode,omitempty"`

	// Maximum time taken (in seconds) for a BGP session to be
	// established after a restart. If the session is not re-established within this timer, the receiving
	// speaker will delete all the stale routes from that peer. Read only for VRF backed Edge Gateways.
	// Maximum time taken (in seconds) for a BGP session to be established after a restart
	GracefulRestartTimer *float64 `json:"gracefulRestartTimer,omitempty" tf:"graceful_restart_timer,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// BGP autonomous systems (AS) number to advertise to BGP peers. BGP
	// AS number can be specified in either ASPLAIN or ASDOT formats, like ASPLAIN format : '65546',
	// ASDOT format : '1.10'. Read only for VRF backed Edge Gateways
	// Autonomous system number
	LocalAsNumber *string `json:"localAsNumber,omitempty" tf:"local_as_number,omitempty"`

	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organisations
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations
	Org *string `json:"org,omitempty" tf:"org,omitempty"`

	// - Maximum time (in seconds) before stale routes are removed when
	// BGP restarts. Read only for VRF backed Edge Gateways
	// Maximum time (in seconds) before stale routes are removed when BGP restarts
	StaleRouteTimer *float64 `json:"staleRouteTimer,omitempty" tf:"stale_route_timer,omitempty"`
}

type NsxtEdgegatewayBgpConfigurationParameters struct {

	// - A flag indicating whether ECMP is enabled or not
	// Defines if ECMP (Equal-cost multi-path routing) is enabled
	// +kubebuilder:validation:Optional
	EcmpEnabled *bool `json:"ecmpEnabled,omitempty" tf:"ecmp_enabled,omitempty"`

	// The ID of the Edge Gateway (NSX-T only). Can be looked up using
	// vcd_nsxt_edgegateway datasource
	// Edge gateway ID for BGP Configuration
	// +kubebuilder:validation:Optional
	EdgeGatewayID *string `json:"edgeGatewayId,omitempty" tf:"edge_gateway_id,omitempty"`

	// Defines if BGP service is enabled or not
	// Defines if BGP service is enabled
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// - Describes Graceful Restart configuration Modes for BGP
	// configuration on an Edge Gateway. Read only for VRF backed Edge Gateways. Possible options are:
	// Graceful restart configuration on Edge Gateway. One of 'DISABLE', 'HELPER_ONLY', 'GRACEFUL_AND_HELPER'
	// +kubebuilder:validation:Optional
	GracefulRestartMode *string `json:"gracefulRestartMode,omitempty" tf:"graceful_restart_mode,omitempty"`

	// Maximum time taken (in seconds) for a BGP session to be
	// established after a restart. If the session is not re-established within this timer, the receiving
	// speaker will delete all the stale routes from that peer. Read only for VRF backed Edge Gateways.
	// Maximum time taken (in seconds) for a BGP session to be established after a restart
	// +kubebuilder:validation:Optional
	GracefulRestartTimer *float64 `json:"gracefulRestartTimer,omitempty" tf:"graceful_restart_timer,omitempty"`

	// BGP autonomous systems (AS) number to advertise to BGP peers. BGP
	// AS number can be specified in either ASPLAIN or ASDOT formats, like ASPLAIN format : '65546',
	// ASDOT format : '1.10'. Read only for VRF backed Edge Gateways
	// Autonomous system number
	// +kubebuilder:validation:Optional
	LocalAsNumber *string `json:"localAsNumber,omitempty" tf:"local_as_number,omitempty"`

	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organisations
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations
	// +kubebuilder:validation:Optional
	Org *string `json:"org,omitempty" tf:"org,omitempty"`

	// - Maximum time (in seconds) before stale routes are removed when
	// BGP restarts. Read only for VRF backed Edge Gateways
	// Maximum time (in seconds) before stale routes are removed when BGP restarts
	// +kubebuilder:validation:Optional
	StaleRouteTimer *float64 `json:"staleRouteTimer,omitempty" tf:"stale_route_timer,omitempty"`
}

// NsxtEdgegatewayBgpConfigurationSpec defines the desired state of NsxtEdgegatewayBgpConfiguration
type NsxtEdgegatewayBgpConfigurationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     NsxtEdgegatewayBgpConfigurationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider NsxtEdgegatewayBgpConfigurationInitParameters `json:"initProvider,omitempty"`
}

// NsxtEdgegatewayBgpConfigurationStatus defines the observed state of NsxtEdgegatewayBgpConfiguration.
type NsxtEdgegatewayBgpConfigurationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        NsxtEdgegatewayBgpConfigurationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// NsxtEdgegatewayBgpConfiguration is the Schema for the NsxtEdgegatewayBgpConfigurations API. Provides a resource to manage BGP configuration on NSX-T Edge Gateway that has a dedicated Tier-0 Gateway or VRF.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vcd}
type NsxtEdgegatewayBgpConfiguration struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.edgeGatewayId) || (has(self.initProvider) && has(self.initProvider.edgeGatewayId))",message="spec.forProvider.edgeGatewayId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	Spec   NsxtEdgegatewayBgpConfigurationSpec   `json:"spec"`
	Status NsxtEdgegatewayBgpConfigurationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// NsxtEdgegatewayBgpConfigurationList contains a list of NsxtEdgegatewayBgpConfigurations
type NsxtEdgegatewayBgpConfigurationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NsxtEdgegatewayBgpConfiguration `json:"items"`
}

// Repository type metadata.
var (
	NsxtEdgegatewayBgpConfiguration_Kind             = "NsxtEdgegatewayBgpConfiguration"
	NsxtEdgegatewayBgpConfiguration_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: NsxtEdgegatewayBgpConfiguration_Kind}.String()
	NsxtEdgegatewayBgpConfiguration_KindAPIVersion   = NsxtEdgegatewayBgpConfiguration_Kind + "." + CRDGroupVersion.String()
	NsxtEdgegatewayBgpConfiguration_GroupVersionKind = CRDGroupVersion.WithKind(NsxtEdgegatewayBgpConfiguration_Kind)
)

func init() {
	SchemeBuilder.Register(&NsxtEdgegatewayBgpConfiguration{}, &NsxtEdgegatewayBgpConfigurationList{})
}
