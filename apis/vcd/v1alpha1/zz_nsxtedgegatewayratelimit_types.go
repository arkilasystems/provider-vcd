// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type NsxtEdgeGatewayRateLimitInitParameters struct {

	// NSX-T Edge Gateway ID
	// Edge gateway ID for Rate limiting (QoS) configuration
	EdgeGatewayID *string `json:"edgeGatewayId,omitempty" tf:"edge_gateway_id,omitempty"`

	// A QoS profile to apply for egress traffic. Note leaving empty
	// means unlimited.
	// Egress profile ID for Rate limiting (QoS) configuration
	EgressProfileID *string `json:"egressProfileId,omitempty" tf:"egress_profile_id,omitempty"`

	// A QoS profile to apply for ingress traffic. Note leaving empty
	// means unlimited.
	// Ingress profile ID for Rate limiting (QoS) configuration
	IngressProfileID *string `json:"ingressProfileId,omitempty" tf:"ingress_profile_id,omitempty"`

	// Org in which the NSX-T Edge Gateway is located
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations
	Org *string `json:"org,omitempty" tf:"org,omitempty"`
}

type NsxtEdgeGatewayRateLimitObservation struct {

	// NSX-T Edge Gateway ID
	// Edge gateway ID for Rate limiting (QoS) configuration
	EdgeGatewayID *string `json:"edgeGatewayId,omitempty" tf:"edge_gateway_id,omitempty"`

	// A QoS profile to apply for egress traffic. Note leaving empty
	// means unlimited.
	// Egress profile ID for Rate limiting (QoS) configuration
	EgressProfileID *string `json:"egressProfileId,omitempty" tf:"egress_profile_id,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A QoS profile to apply for ingress traffic. Note leaving empty
	// means unlimited.
	// Ingress profile ID for Rate limiting (QoS) configuration
	IngressProfileID *string `json:"ingressProfileId,omitempty" tf:"ingress_profile_id,omitempty"`

	// Org in which the NSX-T Edge Gateway is located
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations
	Org *string `json:"org,omitempty" tf:"org,omitempty"`
}

type NsxtEdgeGatewayRateLimitParameters struct {

	// NSX-T Edge Gateway ID
	// Edge gateway ID for Rate limiting (QoS) configuration
	// +kubebuilder:validation:Optional
	EdgeGatewayID *string `json:"edgeGatewayId,omitempty" tf:"edge_gateway_id,omitempty"`

	// A QoS profile to apply for egress traffic. Note leaving empty
	// means unlimited.
	// Egress profile ID for Rate limiting (QoS) configuration
	// +kubebuilder:validation:Optional
	EgressProfileID *string `json:"egressProfileId,omitempty" tf:"egress_profile_id,omitempty"`

	// A QoS profile to apply for ingress traffic. Note leaving empty
	// means unlimited.
	// Ingress profile ID for Rate limiting (QoS) configuration
	// +kubebuilder:validation:Optional
	IngressProfileID *string `json:"ingressProfileId,omitempty" tf:"ingress_profile_id,omitempty"`

	// Org in which the NSX-T Edge Gateway is located
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations
	// +kubebuilder:validation:Optional
	Org *string `json:"org,omitempty" tf:"org,omitempty"`
}

// NsxtEdgeGatewayRateLimitSpec defines the desired state of NsxtEdgeGatewayRateLimit
type NsxtEdgeGatewayRateLimitSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     NsxtEdgeGatewayRateLimitParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider NsxtEdgeGatewayRateLimitInitParameters `json:"initProvider,omitempty"`
}

// NsxtEdgeGatewayRateLimitStatus defines the observed state of NsxtEdgeGatewayRateLimit.
type NsxtEdgeGatewayRateLimitStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        NsxtEdgeGatewayRateLimitObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// NsxtEdgeGatewayRateLimit is the Schema for the NsxtEdgeGatewayRateLimits API. Provides a resource to manage NSX-T Edge Gateway Rate Limiting (QoS) configuration.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vcd}
type NsxtEdgeGatewayRateLimit struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.edgeGatewayId) || (has(self.initProvider) && has(self.initProvider.edgeGatewayId))",message="spec.forProvider.edgeGatewayId is a required parameter"
	Spec   NsxtEdgeGatewayRateLimitSpec   `json:"spec"`
	Status NsxtEdgeGatewayRateLimitStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// NsxtEdgeGatewayRateLimitList contains a list of NsxtEdgeGatewayRateLimits
type NsxtEdgeGatewayRateLimitList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NsxtEdgeGatewayRateLimit `json:"items"`
}

// Repository type metadata.
var (
	NsxtEdgeGatewayRateLimit_Kind             = "NsxtEdgeGatewayRateLimit"
	NsxtEdgeGatewayRateLimit_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: NsxtEdgeGatewayRateLimit_Kind}.String()
	NsxtEdgeGatewayRateLimit_KindAPIVersion   = NsxtEdgeGatewayRateLimit_Kind + "." + CRDGroupVersion.String()
	NsxtEdgeGatewayRateLimit_GroupVersionKind = CRDGroupVersion.WithKind(NsxtEdgeGatewayRateLimit_Kind)
)

func init() {
	SchemeBuilder.Register(&NsxtEdgeGatewayRateLimit{}, &NsxtEdgeGatewayRateLimitList{})
}
