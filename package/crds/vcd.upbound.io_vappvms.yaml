---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: vappvms.vcd.upbound.io
spec:
  group: vcd.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vcd
    kind: VAppVm
    listKind: VAppVmList
    plural: vappvms
    singular: vappvm
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VAppVm is the Schema for the VAppVms API. Provides a VMware Cloud
          Director VM resource. This can be used to create, modify, and delete VMs
          within a vApp.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VAppVmSpec defines the desired state of VAppVm
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  acceptAllEulas:
                    description: |-
                      Automatically accept EULA if OVA has it. Default is true
                      Automatically accept EULA if OVA has it
                    type: boolean
                  bootImage:
                    description: |-
                      (Deprecated; v2.9+) Use boot_image_id instead. Media name to mount as boot image. Image is mounted only during VM creation. On update if value is changed to empty it will eject the mounted media. If you want to mount an image later, please use vcd_inserted_media.
                      Media name to add as boot image.
                    type: string
                  bootImageId:
                    description: |-
                      Media URN to mount as boot image. You can fetch it using a vcd_catalog_media data source.
                      Image is mounted only during VM creation. On update if value is changed to empty it will eject the mounted media. If you want to mount an image later, please use vcd_inserted_media.
                      The URN of the media to use as boot image.
                    type: string
                  bootOptions:
                    description: |-
                      A block to define boot options of the VM. See Boot Options
                      A block defining the boot options of a VM
                    items:
                      properties:
                        bootDelay:
                          description: |-
                            Delay between the power-on and boot of the VM in milliseconds.
                            Number of milliseconds to wait between powering-on and booting the VM
                          type: number
                        bootRetryDelay:
                          description: |-
                            Delay before the VM is rebooted after a failed boot. Has no effect if boot_retry_enabled is set to false
                            Delay in milliseconds before a boot retry. Only works if 'boot_retry_enabled' is set to true.
                          type: number
                        bootRetryEnabled:
                          description: |-
                            If set to true, will attempt to reboot the VM after a failed boot.
                            If set to true, a VM that fails to boot will try again after the 'boot_retry_delay' time period has expired
                          type: boolean
                        efiSecureBoot:
                          description: |-
                            Enable EFI Secure Boot on subsequent boots, requires firmware to be set to efi.
                            If set to true, enables EFI Secure Boot for the VM. Can only be changed when the VM is powered off.
                          type: boolean
                        enterBiosSetupOnNextBoot:
                          description: |-
                            Enter BIOS setup on the next boot of the VM. NOTE: If there are any cold changes on update that cause the VM to power-cycle with this field set to true,
                            the VM will boot straight into BIOS. For reducing side effects, one should set this field to true and power_on to false, then switch power_on to true.
                            If set to true, the VM will enter BIOS setup on next boot
                          type: boolean
                      type: object
                    type: array
                  catalogName:
                    description: |-
                      (Deprecated; v2.9+) Use a vcd_catalog data source along with vapp_template_id or boot_image_id instead. The catalog name in which to find the given vApp Template or media for boot_image.
                      The catalog name in which to find the given vApp Template or media for boot_image
                    type: string
                  computerName:
                    description: |-
                      Computer name to assign to this virtual machine.
                      Computer name to assign to this virtual machine
                    type: string
                  consolidateDisksOnCreate:
                    description: |-
                      Performs disk consolidation during creation.
                      The main use case is when one wants to grow template disk size using override_template_disk in
                      fast provisioned VDCs. Note: Consolidating disks requires right vApp: VM Migrate, Force Undeploy, Relocate, Consolidate. This operation may take long time depending on disk size and
                      storage performance.
                      Consolidates disks during creation and allows to change disk size using 'override_template_disk' in fast provisioned VDCs
                    type: boolean
                  copyFromVmId:
                    description: |-
                      The ID of an existing VM to make a copy of it (it
                      cannot be a vApp template). The source VM must be in the same Org (but can be in different VDC).
                      Note: sizing_policy_id must be specified when creating a standalone VM (using vcd_vm
                      resource) and using different source/destination VDCs.
                      Source VM that should be copied from
                    type: string
                  cpuCores:
                    description: |-
                      The number of cores per socket.
                      The number of cores per socket
                    type: number
                  cpuHotAddEnabled:
                    description: |-
                      True if the virtual machine supports addition of virtual CPUs while powered on. Default is false.
                      True if the virtual machine supports addition of virtual CPUs while powered on.
                    type: boolean
                  cpuLimit:
                    description: |-
                      The limit (in MHz) for how much of CPU can be consumed on the underlying virtualization infrastructure. -1 value for unlimited.
                      The limit for how much of CPU can be consumed on the underlying virtualization infrastructure. This is only valid when the resource allocation is not unlimited.
                    type: number
                  cpuPriority:
                    description: |-
                      Pre-determined relative priorities according to which the non-reserved portion of this resource is made available to the virtualized workload
                      Pre-determined relative priorities according to which the non-reserved portion of this resource is made available to the virtualized workload
                    type: string
                  cpuReservation:
                    description: |-
                      The amount of MHz reservation on the underlying virtualization infrastructure.
                      The amount of MHz reservation on the underlying virtualization infrastructure
                    type: number
                  cpuShares:
                    description: |-
                      Custom priority for the resource in MHz. This is a read-only, unless the cpu_priority is "CUSTOM"
                      Custom priority for the resource. This is a read-only, unless the `cpu_priority` is CUSTOM
                    type: number
                  cpus:
                    description: |-
                      The number of virtual CPUs to allocate to the VM. Socket count is a result of: virtual logical processors/cores per socket. If cpu_hot_add_enabled is true, then cpus will be increased without VM power off.
                      The number of virtual CPUs to allocate to the VM
                    type: number
                  customization:
                    description: |-
                      A block to define for guest customization options. See Customization
                      Guest customization block
                    items:
                      properties:
                        adminPasswordSecretRef:
                          description: |-
                            Manually specify Administrator password.
                            Manually specify admin password
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        allowLocalAdminPassword:
                          description: |-
                            Allow local administrator password.
                            Allow local administrator password
                          type: boolean
                        autoGeneratePassword:
                          description: |-
                            Auto generate password. Note:
                            allow_local_admin_password must be enabled, otherwise next plan will be inconsistent and report
                            auto_generate_password=false
                            Auto generate password
                          type: boolean
                        changeSid:
                          description: |-
                            Allows to change SID (security identifier). Only applicable for Windows operating systems.
                            'true' value will change SID. Applicable only for Windows VMs
                          type: boolean
                        enabled:
                          description: |-
                            customization to work.
                            'true' value will enable guest customization. It may occur on first boot or when 'force' is used
                          type: boolean
                        force:
                          description: |-
                            Warning. true value will cause the VM to reboot on every apply operation. It never complains about a change in statefile. Can be used when guest customization
                            is needed after VM configuration (e.g. NIC change, customization options change, etc.) and then set back to false.
                            Note. It will not have effect when power_on field is set to false. See example workflow below.
                            'true' value will cause the VM to reboot on every 'apply' operation
                          type: boolean
                        initscript:
                          description: |-
                            Provide initscript to be executed when customization is applied.
                            Script to run on initial boot or with customization.force=true set
                          type: string
                        joinDomain:
                          description: |-
                            Enable this VM to join a domain.
                            Enable this VM to join a domain
                          type: boolean
                        joinDomainAccountOu:
                          description: |-
                            Organizational unit to be used for domain join.
                            Account organizational unit for domain name join
                          type: string
                        joinDomainName:
                          description: |-
                            Set the domain name to override organization's domain name.
                            Custom domain name for join
                          type: string
                        joinDomainPasswordSecretRef:
                          description: |-
                            Password to be used for domain join.
                            Password for custom domain name join
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        joinDomainUser:
                          description: |-
                            User to be used for domain join.
                            Username for custom domain name join
                          type: string
                        joinOrgDomain:
                          description: |-
                            Set to true to use organization's domain.
                            Use organization's domain for joining
                          type: boolean
                        mustChangePasswordOnFirstLogin:
                          description: |-
                            Require Administrator to change password on first login.
                            Require Administrator to change password on first login
                          type: boolean
                        numberOfAutoLogons:
                          description: |-
                            Number of times to log on automatically. 0 means disabled.
                            Number of times to log on automatically. '0' - disabled.
                          type: number
                      type: object
                    type: array
                  description:
                    description: |-
                      The VM description. Note: for VM from Template description is read only. Currently, this field has
                      the description of the OVA used to create the VM.
                      The VM description
                    type: string
                  disk:
                    description: Independent disk attachment configuration. See Disk
                      below for details.
                    items:
                      properties:
                        busNumber:
                          description: |-
                            Bus number on which to place the disk controller
                            Bus number on which to place the disk controller
                          type: string
                        name:
                          description: |-
                            A name for the VM, unique within the vApp
                            Independent disk name
                          type: string
                        unitNumber:
                          description: |-
                            Unit number (slot) on the bus specified by BusNumber.
                            Unit number (slot) on the bus specified by BusNumber
                          type: string
                      type: object
                    type: array
                  exposeHardwareVirtualization:
                    description: |-
                      Boolean for exposing full CPU virtualization to the
                      guest operating system so that applications that require hardware virtualization can run on virtual machines without binary
                      translation or paravirtualization. Useful for hypervisor nesting provided underlying hardware supports it. Default is false.
                      Expose hardware-assisted CPU virtualization to guest OS.
                    type: boolean
                  firmware:
                    description: |-
                      Specify boot firmware of the VM. Can be efi or bios. If unset, defaults to bios. Changing the value requires the VM to power off.
                      Firmware of the VM. Can be either EFI or BIOS, availabilitydepending on the os_type argument. If unset, is set to 'bios' by default. Changing the value when `power_on` is set to true, will cause a reboot of the VM.
                    type: string
                  guestProperties:
                    additionalProperties:
                      type: string
                    description: |-
                      Key value map of guest properties
                      Key/value settings for guest properties
                    type: object
                    x-kubernetes-map-type: granular
                  hardwareVersion:
                    description: |-
                      Virtual Hardware Version (e.g.vmx-14, vmx-13, vmx-12, etc.). Required when creating empty VM.
                      Virtual Hardware Version (e.g.`vmx-14`, `vmx-13`, `vmx-12`, etc.)
                    type: string
                  href:
                    description: VM Hyper Reference
                    type: string
                  memory:
                    description: |-
                      The amount of RAM (in MB) to allocate to the VM. If memory_hot_add_enabled is true, then memory will be increased without VM power off
                      The amount of RAM (in MB) to allocate to the VM
                    type: number
                  memoryHotAddEnabled:
                    description: |-
                      True if the virtual machine supports addition of memory while powered on. Default is false.
                      True if the virtual machine supports addition of memory while powered on.
                    type: boolean
                  memoryLimit:
                    description: |-
                      The limit (in MB) for how much of memory can be consumed on the underlying virtualization infrastructure. -1 value for unlimited.
                      The limit for how much of memory can be consumed on the underlying virtualization infrastructure. This is only valid when the resource allocation is not unlimited.
                    type: number
                  memoryPriority:
                    description: |-
                      Pre-determined relative priorities according to which the non-reserved portion of this resource is made available to the virtualized workload
                      Pre-determined relative priorities according to which the non-reserved portion of this resource is made available to the virtualized workload
                    type: string
                  memoryReservation:
                    description: |-
                      The amount of RAM (in MB) reservation on the underlying virtualization infrastructure
                      The amount of RAM (in MB) reservation on the underlying virtualization infrastructure
                    type: number
                  memoryShares:
                    description: |-
                      Custom priority for the resource in MB. This is a read-only, unless the memory_priority is "CUSTOM"
                      Custom priority for the resource. This is a read-only, unless the `memory_priority` is CUSTOM
                    type: number
                  metadata:
                    additionalProperties:
                      type: string
                    description: |-
                      (Deprecated; v2.2+) Use metadata_entry instead. Key value map of metadata to assign to this VM
                      Key value map of metadata to assign to this VM
                    type: object
                    x-kubernetes-map-type: granular
                  metadataEntry:
                    description: |-
                      A set of metadata entries to assign. See Metadata section for details.
                      Metadata entries for the given VM
                    items:
                      properties:
                        isSystem:
                          description: |-
                            Domain for this metadata entry. true if it belongs to SYSTEM, false if it belongs to GENERAL.
                            Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
                          type: boolean
                        key:
                          description: |-
                            Is the unique identifier of this item. It must not contain any spaces.
                            Key of this metadata entry. Required if the metadata entry is not empty
                          type: string
                        type:
                          description: |-
                            Network type, one of: none, vapp or org. none creates a NIC with no network attached. vapp requires name of existing vApp network (created with vcd_vapp_network). org requires attached vApp Org network name (attached with vcd_vapp_org_network).
                            Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
                          type: string
                        userAccess:
                          description: |-
                            User access level for this metadata entry. One of: PRIVATE (hidden), READONLY (read only), READWRITE (read/write).
                            User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
                          type: string
                        value:
                          description: |-
                            The value for this entry
                            Value of this metadata entry. Required if the metadata entry is not empty
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      A name for the VM, unique within the vApp
                      A name for the VM, unique within the vApp
                    type: string
                  network:
                    description: |-
                      A block to define network interface. Multiple can be used. See Network and
                      example for usage details.
                      A block to define network interface. Multiple can be used.
                    items:
                      properties:
                        adapterType:
                          description: |-
                            Adapter type (names are case insensitive). Some known adapter types - VMXNET3,
                            E1000, E1000E, SRIOVETHERNETCARD, VMXNET2, PCNet32.
                            Network card adapter type. (e.g. 'E1000', 'E1000E', 'SRIOVETHERNETCARD', 'VMXNET3', 'PCNet32')
                          type: string
                        connected:
                          description: |-
                            It defines if NIC is connected or not. Network with ip_allocation_mode=NONE can't be connected by default, please use connected=false in such case.
                            It defines if NIC is connected or not.
                          type: boolean
                        ip:
                          description: |-
                            Settings depend on ip_allocation_mode. Field requirements for each ip_allocation_mode are listed below:
                            IP of the VM. Settings depend on `ip_allocation_mode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
                          type: string
                        ipAllocationMode:
                          description: |-
                            IP address allocation mode. One of POOL, DHCP, MANUAL, NONE:
                            IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
                          type: string
                        isPrimary:
                          description: |-
                            Set to true if network interface should be primary. First network card in the list will be primary by default.
                            Set to true if network interface should be primary. First network card in the list will be primary by default
                          type: boolean
                        mac:
                          description: |-
                            (Computed) Mac address of network interface.
                            Mac address of network interface
                          type: string
                        name:
                          description: |-
                            A name for the VM, unique within the vApp
                            Name of the network this VM should connect to. Always required except for `type` `NONE`
                          type: string
                        secondaryIp:
                          description: |-
                            IPv6 IP address. The same configuration methods as the ones
                            for ip field apply.
                            Secondary (IPv6) IP of the VM. Settings depend on `secondary_ip_allocation_mode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
                          type: string
                        secondaryIpAllocationMode:
                          description: |-
                            IPv6 allocation mode if enabled. Same values as for
                            ip_allocation_mode apply. Default NONE.
                            Secondary (IPv6) IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
                          type: string
                        type:
                          description: |-
                            Network type, one of: none, vapp or org. none creates a NIC with no network attached. vapp requires name of existing vApp network (created with vcd_vapp_network). org requires attached vApp Org network name (attached with vcd_vapp_org_network).
                            Network type to use: 'vapp', 'org' or 'none'. Use 'vapp' for vApp network, 'org' to attach Org VDC network. 'none' for empty NIC.
                          type: string
                      type: object
                    type: array
                  networkDhcpWaitSeconds:
                    description: |-
                      Optional number of seconds to try and wait for DHCP IP (only valid
                      for adapters in network block with ip_allocation_mode=DHCP). It constantly checks if IP is present so the time given
                      is a maximum. VM must be powered on and at least one of the following must be true:
                      Optional number of seconds to try and wait for DHCP IP (valid for 'network' block only)
                    type: number
                  org:
                    description: |-
                      The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organisations
                      The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations
                    type: string
                  osType:
                    description: |-
                      Operating System type. Possible values can be found in Os Types. Required when creating empty VM.
                      Operating System type. Possible values can be found in documentation.
                    type: string
                  overrideTemplateDisk:
                    description: |-
                      Allows to update internal disk in template before first VM boot. Disk is matched by bus_type, bus_number and unit_number. See Override template Disk below for details.
                      A block to match internal_disk interface in template. Multiple can be used. Disk will be matched by bus_type, bus_number and unit_number.
                    items:
                      properties:
                        busNumber:
                          description: |-
                            Bus number on which to place the disk controller
                            The number of the SCSI or IDE controller itself.
                          type: number
                        busType:
                          description: |-
                            The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI),
                            sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme. Note nvme requires v3.5.0+ and
                            VCD 10.2.1+
                            The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
                          type: string
                        iops:
                          description: |-
                            Specifies the IOPS for the disk. Default is 0.
                            Specifies the IOPS for the disk. Default is 0.
                          type: number
                        sizeInMb:
                          description: |-
                            The size of the disk in MB.
                            The size of the disk in MB.
                          type: number
                        storageProfile:
                          description: |-
                            Storage profile to override the default one
                            Storage profile to override the VM default one
                          type: string
                        unitNumber:
                          description: |-
                            Unit number (slot) on the bus specified by BusNumber.
                            The device number on the SCSI or IDE controller of the disk.
                          type: number
                      type: object
                    type: array
                  placementPolicyId:
                    description: |-
                      VM placement policy or vGPU policy (3.11+) ID. To be used, it needs to be assigned to Org VDC
                      In this case, if the placement policy is not set, it will pick the VDC default on creation. It must be set explicitly
                      if one wants to update it to another policy (the VM requires at least one Compute Policy), and needs to be set to "" to be removed.
                      VM placement policy ID. Has to be assigned to Org VDC.
                    type: string
                  powerOn:
                    description: |-
                      A boolean value stating if this VM should be powered on. Default is true
                      A boolean value stating if this VM should be powered on
                    type: boolean
                  preventUpdatePowerOff:
                    description: |-
                      True if the update of resource should fail when virtual machine power off needed. Default is false.
                      True if the update of resource should fail when virtual machine power off needed.
                    type: boolean
                  securityTags:
                    description: |-
                      Set of security tags to be managed by the vcd_vapp_vm resource.
                      To remove security_tags you must set security_tags = [] and do not remove the attribute. Removing the attribute will cause the tags to remain unchanged and just stop being managed by this resource.
                      This is to be consistent with existing security tags that were created by the vcd_security_tags resource.
                      Security tags to assign to this VM
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  setExtraConfig:
                    description: |-
                      Set of extra configuration key/values to be added or modified. See Extra Configuration
                      A block to set extra configuration key-value pairs
                    items:
                      properties:
                        key:
                          description: |-
                            Is the unique identifier of this item. It must not contain any spaces.
                            The key of the extra configuration item
                          type: string
                        value:
                          description: |-
                            A value for this item. You can use it to insert new items or modify existing ones. Setting
                            the value to an empty string will remove the item.
                            The value of the extra configuration item. Leaving the `value` field empty will result in the item deletion
                          type: string
                      type: object
                    type: array
                  sizingPolicyId:
                    description: |-
                      VM sizing policy ID. To be used, it needs to be assigned to Org VDC
                      using vcd_org_vdc.vm_sizing_policy_ids (and vcd_org_vdc.default_compute_policy_id to make it default).
                      In this case, if the sizing policy is not set, it will pick the VDC default on creation. It must be set explicitly
                      if one wants to update it to another policy (the VM requires at least one Compute Policy), and needs to be set to "" to be removed.
                      VM sizing policy ID. Has to be assigned to Org VDC.
                    type: string
                  storageProfile:
                    description: |-
                      Storage profile to override the default one
                      Storage profile to override the default one
                    type: string
                  templateName:
                    description: |-
                      (Deprecated; v2.9+) Use vapp_template_id instead. The name of the vApp Template to use
                      The name of the vApp Template to use
                    type: string
                  vappName:
                    description: |-
                      The vApp this VM belongs to.
                      The vApp this VM belongs to - Required, unless it is a standalone VM
                    type: string
                  vappTemplateId:
                    description: |-
                      The URN of the vApp Template to use. You can fetch it using a vcd_catalog_vapp_template data source.
                      The URN of the vApp Template to use
                    type: string
                  vdc:
                    description: |-
                      The name of VDC to use, optional if defined at provider level
                      The name of VDC to use, optional if defined at provider level
                    type: string
                  vmNameInTemplate:
                    description: |-
                      The name of the VM in vApp Template to use. For cases when vApp template has more than one VM.
                      The name of the VM in vApp Template to use. In cases when vApp template has more than one VM
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  acceptAllEulas:
                    description: |-
                      Automatically accept EULA if OVA has it. Default is true
                      Automatically accept EULA if OVA has it
                    type: boolean
                  bootImage:
                    description: |-
                      (Deprecated; v2.9+) Use boot_image_id instead. Media name to mount as boot image. Image is mounted only during VM creation. On update if value is changed to empty it will eject the mounted media. If you want to mount an image later, please use vcd_inserted_media.
                      Media name to add as boot image.
                    type: string
                  bootImageId:
                    description: |-
                      Media URN to mount as boot image. You can fetch it using a vcd_catalog_media data source.
                      Image is mounted only during VM creation. On update if value is changed to empty it will eject the mounted media. If you want to mount an image later, please use vcd_inserted_media.
                      The URN of the media to use as boot image.
                    type: string
                  bootOptions:
                    description: |-
                      A block to define boot options of the VM. See Boot Options
                      A block defining the boot options of a VM
                    items:
                      properties:
                        bootDelay:
                          description: |-
                            Delay between the power-on and boot of the VM in milliseconds.
                            Number of milliseconds to wait between powering-on and booting the VM
                          type: number
                        bootRetryDelay:
                          description: |-
                            Delay before the VM is rebooted after a failed boot. Has no effect if boot_retry_enabled is set to false
                            Delay in milliseconds before a boot retry. Only works if 'boot_retry_enabled' is set to true.
                          type: number
                        bootRetryEnabled:
                          description: |-
                            If set to true, will attempt to reboot the VM after a failed boot.
                            If set to true, a VM that fails to boot will try again after the 'boot_retry_delay' time period has expired
                          type: boolean
                        efiSecureBoot:
                          description: |-
                            Enable EFI Secure Boot on subsequent boots, requires firmware to be set to efi.
                            If set to true, enables EFI Secure Boot for the VM. Can only be changed when the VM is powered off.
                          type: boolean
                        enterBiosSetupOnNextBoot:
                          description: |-
                            Enter BIOS setup on the next boot of the VM. NOTE: If there are any cold changes on update that cause the VM to power-cycle with this field set to true,
                            the VM will boot straight into BIOS. For reducing side effects, one should set this field to true and power_on to false, then switch power_on to true.
                            If set to true, the VM will enter BIOS setup on next boot
                          type: boolean
                      type: object
                    type: array
                  catalogName:
                    description: |-
                      (Deprecated; v2.9+) Use a vcd_catalog data source along with vapp_template_id or boot_image_id instead. The catalog name in which to find the given vApp Template or media for boot_image.
                      The catalog name in which to find the given vApp Template or media for boot_image
                    type: string
                  computerName:
                    description: |-
                      Computer name to assign to this virtual machine.
                      Computer name to assign to this virtual machine
                    type: string
                  consolidateDisksOnCreate:
                    description: |-
                      Performs disk consolidation during creation.
                      The main use case is when one wants to grow template disk size using override_template_disk in
                      fast provisioned VDCs. Note: Consolidating disks requires right vApp: VM Migrate, Force Undeploy, Relocate, Consolidate. This operation may take long time depending on disk size and
                      storage performance.
                      Consolidates disks during creation and allows to change disk size using 'override_template_disk' in fast provisioned VDCs
                    type: boolean
                  copyFromVmId:
                    description: |-
                      The ID of an existing VM to make a copy of it (it
                      cannot be a vApp template). The source VM must be in the same Org (but can be in different VDC).
                      Note: sizing_policy_id must be specified when creating a standalone VM (using vcd_vm
                      resource) and using different source/destination VDCs.
                      Source VM that should be copied from
                    type: string
                  cpuCores:
                    description: |-
                      The number of cores per socket.
                      The number of cores per socket
                    type: number
                  cpuHotAddEnabled:
                    description: |-
                      True if the virtual machine supports addition of virtual CPUs while powered on. Default is false.
                      True if the virtual machine supports addition of virtual CPUs while powered on.
                    type: boolean
                  cpuLimit:
                    description: |-
                      The limit (in MHz) for how much of CPU can be consumed on the underlying virtualization infrastructure. -1 value for unlimited.
                      The limit for how much of CPU can be consumed on the underlying virtualization infrastructure. This is only valid when the resource allocation is not unlimited.
                    type: number
                  cpuPriority:
                    description: |-
                      Pre-determined relative priorities according to which the non-reserved portion of this resource is made available to the virtualized workload
                      Pre-determined relative priorities according to which the non-reserved portion of this resource is made available to the virtualized workload
                    type: string
                  cpuReservation:
                    description: |-
                      The amount of MHz reservation on the underlying virtualization infrastructure.
                      The amount of MHz reservation on the underlying virtualization infrastructure
                    type: number
                  cpuShares:
                    description: |-
                      Custom priority for the resource in MHz. This is a read-only, unless the cpu_priority is "CUSTOM"
                      Custom priority for the resource. This is a read-only, unless the `cpu_priority` is CUSTOM
                    type: number
                  cpus:
                    description: |-
                      The number of virtual CPUs to allocate to the VM. Socket count is a result of: virtual logical processors/cores per socket. If cpu_hot_add_enabled is true, then cpus will be increased without VM power off.
                      The number of virtual CPUs to allocate to the VM
                    type: number
                  customization:
                    description: |-
                      A block to define for guest customization options. See Customization
                      Guest customization block
                    items:
                      properties:
                        adminPasswordSecretRef:
                          description: |-
                            Manually specify Administrator password.
                            Manually specify admin password
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        allowLocalAdminPassword:
                          description: |-
                            Allow local administrator password.
                            Allow local administrator password
                          type: boolean
                        autoGeneratePassword:
                          description: |-
                            Auto generate password. Note:
                            allow_local_admin_password must be enabled, otherwise next plan will be inconsistent and report
                            auto_generate_password=false
                            Auto generate password
                          type: boolean
                        changeSid:
                          description: |-
                            Allows to change SID (security identifier). Only applicable for Windows operating systems.
                            'true' value will change SID. Applicable only for Windows VMs
                          type: boolean
                        enabled:
                          description: |-
                            customization to work.
                            'true' value will enable guest customization. It may occur on first boot or when 'force' is used
                          type: boolean
                        force:
                          description: |-
                            Warning. true value will cause the VM to reboot on every apply operation. It never complains about a change in statefile. Can be used when guest customization
                            is needed after VM configuration (e.g. NIC change, customization options change, etc.) and then set back to false.
                            Note. It will not have effect when power_on field is set to false. See example workflow below.
                            'true' value will cause the VM to reboot on every 'apply' operation
                          type: boolean
                        initscript:
                          description: |-
                            Provide initscript to be executed when customization is applied.
                            Script to run on initial boot or with customization.force=true set
                          type: string
                        joinDomain:
                          description: |-
                            Enable this VM to join a domain.
                            Enable this VM to join a domain
                          type: boolean
                        joinDomainAccountOu:
                          description: |-
                            Organizational unit to be used for domain join.
                            Account organizational unit for domain name join
                          type: string
                        joinDomainName:
                          description: |-
                            Set the domain name to override organization's domain name.
                            Custom domain name for join
                          type: string
                        joinDomainPasswordSecretRef:
                          description: |-
                            Password to be used for domain join.
                            Password for custom domain name join
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        joinDomainUser:
                          description: |-
                            User to be used for domain join.
                            Username for custom domain name join
                          type: string
                        joinOrgDomain:
                          description: |-
                            Set to true to use organization's domain.
                            Use organization's domain for joining
                          type: boolean
                        mustChangePasswordOnFirstLogin:
                          description: |-
                            Require Administrator to change password on first login.
                            Require Administrator to change password on first login
                          type: boolean
                        numberOfAutoLogons:
                          description: |-
                            Number of times to log on automatically. 0 means disabled.
                            Number of times to log on automatically. '0' - disabled.
                          type: number
                      type: object
                    type: array
                  description:
                    description: |-
                      The VM description. Note: for VM from Template description is read only. Currently, this field has
                      the description of the OVA used to create the VM.
                      The VM description
                    type: string
                  disk:
                    description: Independent disk attachment configuration. See Disk
                      below for details.
                    items:
                      properties:
                        busNumber:
                          description: |-
                            Bus number on which to place the disk controller
                            Bus number on which to place the disk controller
                          type: string
                        name:
                          description: |-
                            A name for the VM, unique within the vApp
                            Independent disk name
                          type: string
                        unitNumber:
                          description: |-
                            Unit number (slot) on the bus specified by BusNumber.
                            Unit number (slot) on the bus specified by BusNumber
                          type: string
                      type: object
                    type: array
                  exposeHardwareVirtualization:
                    description: |-
                      Boolean for exposing full CPU virtualization to the
                      guest operating system so that applications that require hardware virtualization can run on virtual machines without binary
                      translation or paravirtualization. Useful for hypervisor nesting provided underlying hardware supports it. Default is false.
                      Expose hardware-assisted CPU virtualization to guest OS.
                    type: boolean
                  firmware:
                    description: |-
                      Specify boot firmware of the VM. Can be efi or bios. If unset, defaults to bios. Changing the value requires the VM to power off.
                      Firmware of the VM. Can be either EFI or BIOS, availabilitydepending on the os_type argument. If unset, is set to 'bios' by default. Changing the value when `power_on` is set to true, will cause a reboot of the VM.
                    type: string
                  guestProperties:
                    additionalProperties:
                      type: string
                    description: |-
                      Key value map of guest properties
                      Key/value settings for guest properties
                    type: object
                    x-kubernetes-map-type: granular
                  hardwareVersion:
                    description: |-
                      Virtual Hardware Version (e.g.vmx-14, vmx-13, vmx-12, etc.). Required when creating empty VM.
                      Virtual Hardware Version (e.g.`vmx-14`, `vmx-13`, `vmx-12`, etc.)
                    type: string
                  href:
                    description: VM Hyper Reference
                    type: string
                  memory:
                    description: |-
                      The amount of RAM (in MB) to allocate to the VM. If memory_hot_add_enabled is true, then memory will be increased without VM power off
                      The amount of RAM (in MB) to allocate to the VM
                    type: number
                  memoryHotAddEnabled:
                    description: |-
                      True if the virtual machine supports addition of memory while powered on. Default is false.
                      True if the virtual machine supports addition of memory while powered on.
                    type: boolean
                  memoryLimit:
                    description: |-
                      The limit (in MB) for how much of memory can be consumed on the underlying virtualization infrastructure. -1 value for unlimited.
                      The limit for how much of memory can be consumed on the underlying virtualization infrastructure. This is only valid when the resource allocation is not unlimited.
                    type: number
                  memoryPriority:
                    description: |-
                      Pre-determined relative priorities according to which the non-reserved portion of this resource is made available to the virtualized workload
                      Pre-determined relative priorities according to which the non-reserved portion of this resource is made available to the virtualized workload
                    type: string
                  memoryReservation:
                    description: |-
                      The amount of RAM (in MB) reservation on the underlying virtualization infrastructure
                      The amount of RAM (in MB) reservation on the underlying virtualization infrastructure
                    type: number
                  memoryShares:
                    description: |-
                      Custom priority for the resource in MB. This is a read-only, unless the memory_priority is "CUSTOM"
                      Custom priority for the resource. This is a read-only, unless the `memory_priority` is CUSTOM
                    type: number
                  metadata:
                    additionalProperties:
                      type: string
                    description: |-
                      (Deprecated; v2.2+) Use metadata_entry instead. Key value map of metadata to assign to this VM
                      Key value map of metadata to assign to this VM
                    type: object
                    x-kubernetes-map-type: granular
                  metadataEntry:
                    description: |-
                      A set of metadata entries to assign. See Metadata section for details.
                      Metadata entries for the given VM
                    items:
                      properties:
                        isSystem:
                          description: |-
                            Domain for this metadata entry. true if it belongs to SYSTEM, false if it belongs to GENERAL.
                            Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
                          type: boolean
                        key:
                          description: |-
                            Is the unique identifier of this item. It must not contain any spaces.
                            Key of this metadata entry. Required if the metadata entry is not empty
                          type: string
                        type:
                          description: |-
                            Network type, one of: none, vapp or org. none creates a NIC with no network attached. vapp requires name of existing vApp network (created with vcd_vapp_network). org requires attached vApp Org network name (attached with vcd_vapp_org_network).
                            Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
                          type: string
                        userAccess:
                          description: |-
                            User access level for this metadata entry. One of: PRIVATE (hidden), READONLY (read only), READWRITE (read/write).
                            User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
                          type: string
                        value:
                          description: |-
                            The value for this entry
                            Value of this metadata entry. Required if the metadata entry is not empty
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      A name for the VM, unique within the vApp
                      A name for the VM, unique within the vApp
                    type: string
                  network:
                    description: |-
                      A block to define network interface. Multiple can be used. See Network and
                      example for usage details.
                      A block to define network interface. Multiple can be used.
                    items:
                      properties:
                        adapterType:
                          description: |-
                            Adapter type (names are case insensitive). Some known adapter types - VMXNET3,
                            E1000, E1000E, SRIOVETHERNETCARD, VMXNET2, PCNet32.
                            Network card adapter type. (e.g. 'E1000', 'E1000E', 'SRIOVETHERNETCARD', 'VMXNET3', 'PCNet32')
                          type: string
                        connected:
                          description: |-
                            It defines if NIC is connected or not. Network with ip_allocation_mode=NONE can't be connected by default, please use connected=false in such case.
                            It defines if NIC is connected or not.
                          type: boolean
                        ip:
                          description: |-
                            Settings depend on ip_allocation_mode. Field requirements for each ip_allocation_mode are listed below:
                            IP of the VM. Settings depend on `ip_allocation_mode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
                          type: string
                        ipAllocationMode:
                          description: |-
                            IP address allocation mode. One of POOL, DHCP, MANUAL, NONE:
                            IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
                          type: string
                        isPrimary:
                          description: |-
                            Set to true if network interface should be primary. First network card in the list will be primary by default.
                            Set to true if network interface should be primary. First network card in the list will be primary by default
                          type: boolean
                        mac:
                          description: |-
                            (Computed) Mac address of network interface.
                            Mac address of network interface
                          type: string
                        name:
                          description: |-
                            A name for the VM, unique within the vApp
                            Name of the network this VM should connect to. Always required except for `type` `NONE`
                          type: string
                        secondaryIp:
                          description: |-
                            IPv6 IP address. The same configuration methods as the ones
                            for ip field apply.
                            Secondary (IPv6) IP of the VM. Settings depend on `secondary_ip_allocation_mode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
                          type: string
                        secondaryIpAllocationMode:
                          description: |-
                            IPv6 allocation mode if enabled. Same values as for
                            ip_allocation_mode apply. Default NONE.
                            Secondary (IPv6) IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
                          type: string
                        type:
                          description: |-
                            Network type, one of: none, vapp or org. none creates a NIC with no network attached. vapp requires name of existing vApp network (created with vcd_vapp_network). org requires attached vApp Org network name (attached with vcd_vapp_org_network).
                            Network type to use: 'vapp', 'org' or 'none'. Use 'vapp' for vApp network, 'org' to attach Org VDC network. 'none' for empty NIC.
                          type: string
                      type: object
                    type: array
                  networkDhcpWaitSeconds:
                    description: |-
                      Optional number of seconds to try and wait for DHCP IP (only valid
                      for adapters in network block with ip_allocation_mode=DHCP). It constantly checks if IP is present so the time given
                      is a maximum. VM must be powered on and at least one of the following must be true:
                      Optional number of seconds to try and wait for DHCP IP (valid for 'network' block only)
                    type: number
                  org:
                    description: |-
                      The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organisations
                      The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations
                    type: string
                  osType:
                    description: |-
                      Operating System type. Possible values can be found in Os Types. Required when creating empty VM.
                      Operating System type. Possible values can be found in documentation.
                    type: string
                  overrideTemplateDisk:
                    description: |-
                      Allows to update internal disk in template before first VM boot. Disk is matched by bus_type, bus_number and unit_number. See Override template Disk below for details.
                      A block to match internal_disk interface in template. Multiple can be used. Disk will be matched by bus_type, bus_number and unit_number.
                    items:
                      properties:
                        busNumber:
                          description: |-
                            Bus number on which to place the disk controller
                            The number of the SCSI or IDE controller itself.
                          type: number
                        busType:
                          description: |-
                            The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI),
                            sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme. Note nvme requires v3.5.0+ and
                            VCD 10.2.1+
                            The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
                          type: string
                        iops:
                          description: |-
                            Specifies the IOPS for the disk. Default is 0.
                            Specifies the IOPS for the disk. Default is 0.
                          type: number
                        sizeInMb:
                          description: |-
                            The size of the disk in MB.
                            The size of the disk in MB.
                          type: number
                        storageProfile:
                          description: |-
                            Storage profile to override the default one
                            Storage profile to override the VM default one
                          type: string
                        unitNumber:
                          description: |-
                            Unit number (slot) on the bus specified by BusNumber.
                            The device number on the SCSI or IDE controller of the disk.
                          type: number
                      type: object
                    type: array
                  placementPolicyId:
                    description: |-
                      VM placement policy or vGPU policy (3.11+) ID. To be used, it needs to be assigned to Org VDC
                      In this case, if the placement policy is not set, it will pick the VDC default on creation. It must be set explicitly
                      if one wants to update it to another policy (the VM requires at least one Compute Policy), and needs to be set to "" to be removed.
                      VM placement policy ID. Has to be assigned to Org VDC.
                    type: string
                  powerOn:
                    description: |-
                      A boolean value stating if this VM should be powered on. Default is true
                      A boolean value stating if this VM should be powered on
                    type: boolean
                  preventUpdatePowerOff:
                    description: |-
                      True if the update of resource should fail when virtual machine power off needed. Default is false.
                      True if the update of resource should fail when virtual machine power off needed.
                    type: boolean
                  securityTags:
                    description: |-
                      Set of security tags to be managed by the vcd_vapp_vm resource.
                      To remove security_tags you must set security_tags = [] and do not remove the attribute. Removing the attribute will cause the tags to remain unchanged and just stop being managed by this resource.
                      This is to be consistent with existing security tags that were created by the vcd_security_tags resource.
                      Security tags to assign to this VM
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  setExtraConfig:
                    description: |-
                      Set of extra configuration key/values to be added or modified. See Extra Configuration
                      A block to set extra configuration key-value pairs
                    items:
                      properties:
                        key:
                          description: |-
                            Is the unique identifier of this item. It must not contain any spaces.
                            The key of the extra configuration item
                          type: string
                        value:
                          description: |-
                            A value for this item. You can use it to insert new items or modify existing ones. Setting
                            the value to an empty string will remove the item.
                            The value of the extra configuration item. Leaving the `value` field empty will result in the item deletion
                          type: string
                      type: object
                    type: array
                  sizingPolicyId:
                    description: |-
                      VM sizing policy ID. To be used, it needs to be assigned to Org VDC
                      using vcd_org_vdc.vm_sizing_policy_ids (and vcd_org_vdc.default_compute_policy_id to make it default).
                      In this case, if the sizing policy is not set, it will pick the VDC default on creation. It must be set explicitly
                      if one wants to update it to another policy (the VM requires at least one Compute Policy), and needs to be set to "" to be removed.
                      VM sizing policy ID. Has to be assigned to Org VDC.
                    type: string
                  storageProfile:
                    description: |-
                      Storage profile to override the default one
                      Storage profile to override the default one
                    type: string
                  templateName:
                    description: |-
                      (Deprecated; v2.9+) Use vapp_template_id instead. The name of the vApp Template to use
                      The name of the vApp Template to use
                    type: string
                  vappName:
                    description: |-
                      The vApp this VM belongs to.
                      The vApp this VM belongs to - Required, unless it is a standalone VM
                    type: string
                  vappTemplateId:
                    description: |-
                      The URN of the vApp Template to use. You can fetch it using a vcd_catalog_vapp_template data source.
                      The URN of the vApp Template to use
                    type: string
                  vdc:
                    description: |-
                      The name of VDC to use, optional if defined at provider level
                      The name of VDC to use, optional if defined at provider level
                    type: string
                  vmNameInTemplate:
                    description: |-
                      The name of the VM in vApp Template to use. For cases when vApp template has more than one VM.
                      The name of the VM in vApp Template to use. In cases when vApp template has more than one VM
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.vappName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.vappName)
                || (has(self.initProvider) && has(self.initProvider.vappName))'
          status:
            description: VAppVmStatus defines the observed state of VAppVm.
            properties:
              atProvider:
                properties:
                  acceptAllEulas:
                    description: |-
                      Automatically accept EULA if OVA has it. Default is true
                      Automatically accept EULA if OVA has it
                    type: boolean
                  bootImage:
                    description: |-
                      (Deprecated; v2.9+) Use boot_image_id instead. Media name to mount as boot image. Image is mounted only during VM creation. On update if value is changed to empty it will eject the mounted media. If you want to mount an image later, please use vcd_inserted_media.
                      Media name to add as boot image.
                    type: string
                  bootImageId:
                    description: |-
                      Media URN to mount as boot image. You can fetch it using a vcd_catalog_media data source.
                      Image is mounted only during VM creation. On update if value is changed to empty it will eject the mounted media. If you want to mount an image later, please use vcd_inserted_media.
                      The URN of the media to use as boot image.
                    type: string
                  bootOptions:
                    description: |-
                      A block to define boot options of the VM. See Boot Options
                      A block defining the boot options of a VM
                    items:
                      properties:
                        bootDelay:
                          description: |-
                            Delay between the power-on and boot of the VM in milliseconds.
                            Number of milliseconds to wait between powering-on and booting the VM
                          type: number
                        bootRetryDelay:
                          description: |-
                            Delay before the VM is rebooted after a failed boot. Has no effect if boot_retry_enabled is set to false
                            Delay in milliseconds before a boot retry. Only works if 'boot_retry_enabled' is set to true.
                          type: number
                        bootRetryEnabled:
                          description: |-
                            If set to true, will attempt to reboot the VM after a failed boot.
                            If set to true, a VM that fails to boot will try again after the 'boot_retry_delay' time period has expired
                          type: boolean
                        efiSecureBoot:
                          description: |-
                            Enable EFI Secure Boot on subsequent boots, requires firmware to be set to efi.
                            If set to true, enables EFI Secure Boot for the VM. Can only be changed when the VM is powered off.
                          type: boolean
                        enterBiosSetupOnNextBoot:
                          description: |-
                            Enter BIOS setup on the next boot of the VM. NOTE: If there are any cold changes on update that cause the VM to power-cycle with this field set to true,
                            the VM will boot straight into BIOS. For reducing side effects, one should set this field to true and power_on to false, then switch power_on to true.
                            If set to true, the VM will enter BIOS setup on next boot
                          type: boolean
                      type: object
                    type: array
                  catalogName:
                    description: |-
                      (Deprecated; v2.9+) Use a vcd_catalog data source along with vapp_template_id or boot_image_id instead. The catalog name in which to find the given vApp Template or media for boot_image.
                      The catalog name in which to find the given vApp Template or media for boot_image
                    type: string
                  computerName:
                    description: |-
                      Computer name to assign to this virtual machine.
                      Computer name to assign to this virtual machine
                    type: string
                  consolidateDisksOnCreate:
                    description: |-
                      Performs disk consolidation during creation.
                      The main use case is when one wants to grow template disk size using override_template_disk in
                      fast provisioned VDCs. Note: Consolidating disks requires right vApp: VM Migrate, Force Undeploy, Relocate, Consolidate. This operation may take long time depending on disk size and
                      storage performance.
                      Consolidates disks during creation and allows to change disk size using 'override_template_disk' in fast provisioned VDCs
                    type: boolean
                  copyFromVmId:
                    description: |-
                      The ID of an existing VM to make a copy of it (it
                      cannot be a vApp template). The source VM must be in the same Org (but can be in different VDC).
                      Note: sizing_policy_id must be specified when creating a standalone VM (using vcd_vm
                      resource) and using different source/destination VDCs.
                      Source VM that should be copied from
                    type: string
                  cpuCores:
                    description: |-
                      The number of cores per socket.
                      The number of cores per socket
                    type: number
                  cpuHotAddEnabled:
                    description: |-
                      True if the virtual machine supports addition of virtual CPUs while powered on. Default is false.
                      True if the virtual machine supports addition of virtual CPUs while powered on.
                    type: boolean
                  cpuLimit:
                    description: |-
                      The limit (in MHz) for how much of CPU can be consumed on the underlying virtualization infrastructure. -1 value for unlimited.
                      The limit for how much of CPU can be consumed on the underlying virtualization infrastructure. This is only valid when the resource allocation is not unlimited.
                    type: number
                  cpuPriority:
                    description: |-
                      Pre-determined relative priorities according to which the non-reserved portion of this resource is made available to the virtualized workload
                      Pre-determined relative priorities according to which the non-reserved portion of this resource is made available to the virtualized workload
                    type: string
                  cpuReservation:
                    description: |-
                      The amount of MHz reservation on the underlying virtualization infrastructure.
                      The amount of MHz reservation on the underlying virtualization infrastructure
                    type: number
                  cpuShares:
                    description: |-
                      Custom priority for the resource in MHz. This is a read-only, unless the cpu_priority is "CUSTOM"
                      Custom priority for the resource. This is a read-only, unless the `cpu_priority` is CUSTOM
                    type: number
                  cpus:
                    description: |-
                      The number of virtual CPUs to allocate to the VM. Socket count is a result of: virtual logical processors/cores per socket. If cpu_hot_add_enabled is true, then cpus will be increased without VM power off.
                      The number of virtual CPUs to allocate to the VM
                    type: number
                  customization:
                    description: |-
                      A block to define for guest customization options. See Customization
                      Guest customization block
                    items:
                      properties:
                        allowLocalAdminPassword:
                          description: |-
                            Allow local administrator password.
                            Allow local administrator password
                          type: boolean
                        autoGeneratePassword:
                          description: |-
                            Auto generate password. Note:
                            allow_local_admin_password must be enabled, otherwise next plan will be inconsistent and report
                            auto_generate_password=false
                            Auto generate password
                          type: boolean
                        changeSid:
                          description: |-
                            Allows to change SID (security identifier). Only applicable for Windows operating systems.
                            'true' value will change SID. Applicable only for Windows VMs
                          type: boolean
                        enabled:
                          description: |-
                            customization to work.
                            'true' value will enable guest customization. It may occur on first boot or when 'force' is used
                          type: boolean
                        force:
                          description: |-
                            Warning. true value will cause the VM to reboot on every apply operation. It never complains about a change in statefile. Can be used when guest customization
                            is needed after VM configuration (e.g. NIC change, customization options change, etc.) and then set back to false.
                            Note. It will not have effect when power_on field is set to false. See example workflow below.
                            'true' value will cause the VM to reboot on every 'apply' operation
                          type: boolean
                        initscript:
                          description: |-
                            Provide initscript to be executed when customization is applied.
                            Script to run on initial boot or with customization.force=true set
                          type: string
                        joinDomain:
                          description: |-
                            Enable this VM to join a domain.
                            Enable this VM to join a domain
                          type: boolean
                        joinDomainAccountOu:
                          description: |-
                            Organizational unit to be used for domain join.
                            Account organizational unit for domain name join
                          type: string
                        joinDomainName:
                          description: |-
                            Set the domain name to override organization's domain name.
                            Custom domain name for join
                          type: string
                        joinDomainUser:
                          description: |-
                            User to be used for domain join.
                            Username for custom domain name join
                          type: string
                        joinOrgDomain:
                          description: |-
                            Set to true to use organization's domain.
                            Use organization's domain for joining
                          type: boolean
                        mustChangePasswordOnFirstLogin:
                          description: |-
                            Require Administrator to change password on first login.
                            Require Administrator to change password on first login
                          type: boolean
                        numberOfAutoLogons:
                          description: |-
                            Number of times to log on automatically. 0 means disabled.
                            Number of times to log on automatically. '0' - disabled.
                          type: number
                      type: object
                    type: array
                  description:
                    description: |-
                      The VM description. Note: for VM from Template description is read only. Currently, this field has
                      the description of the OVA used to create the VM.
                      The VM description
                    type: string
                  disk:
                    description: Independent disk attachment configuration. See Disk
                      below for details.
                    items:
                      properties:
                        busNumber:
                          description: |-
                            Bus number on which to place the disk controller
                            Bus number on which to place the disk controller
                          type: string
                        name:
                          description: |-
                            A name for the VM, unique within the vApp
                            Independent disk name
                          type: string
                        sizeInMb:
                          description: |-
                            (v2.7+) Independent disk size in MB.
                            The size of the disk in MB.
                          type: number
                        unitNumber:
                          description: |-
                            Unit number (slot) on the bus specified by BusNumber.
                            Unit number (slot) on the bus specified by BusNumber
                          type: string
                      type: object
                    type: array
                  exposeHardwareVirtualization:
                    description: |-
                      Boolean for exposing full CPU virtualization to the
                      guest operating system so that applications that require hardware virtualization can run on virtual machines without binary
                      translation or paravirtualization. Useful for hypervisor nesting provided underlying hardware supports it. Default is false.
                      Expose hardware-assisted CPU virtualization to guest OS.
                    type: boolean
                  extraConfig:
                    description: |-
                      (v3.13.+) The VM extra configuration. See Extra Configuration for more detail. Not populated on VCD 10.4.0.
                      A block to retrieve extra configuration key-value pairs
                    items:
                      properties:
                        key:
                          description: Is the unique identifier of this item. It must
                            not contain any spaces.
                          type: string
                        required:
                          description: Whether the entry is required
                          type: boolean
                        value:
                          description: The value for this entry
                          type: string
                      type: object
                    type: array
                  firmware:
                    description: |-
                      Specify boot firmware of the VM. Can be efi or bios. If unset, defaults to bios. Changing the value requires the VM to power off.
                      Firmware of the VM. Can be either EFI or BIOS, availabilitydepending on the os_type argument. If unset, is set to 'bios' by default. Changing the value when `power_on` is set to true, will cause a reboot of the VM.
                    type: string
                  guestProperties:
                    additionalProperties:
                      type: string
                    description: |-
                      Key value map of guest properties
                      Key/value settings for guest properties
                    type: object
                    x-kubernetes-map-type: granular
                  hardwareVersion:
                    description: |-
                      Virtual Hardware Version (e.g.vmx-14, vmx-13, vmx-12, etc.). Required when creating empty VM.
                      Virtual Hardware Version (e.g.`vmx-14`, `vmx-13`, `vmx-12`, etc.)
                    type: string
                  href:
                    description: VM Hyper Reference
                    type: string
                  id:
                    type: string
                  imported:
                    description: |-
                      (v3.13.+) A true/false value telling whether the resource was imported.
                      Tells whether this resource has been imported
                    type: boolean
                  inheritedMetadata:
                    additionalProperties:
                      type: string
                    description: |-
                      (v3.11+; VCD 10.5.1+) A map that contains read-only metadata that is automatically added by VCD (10.5.1+) and provides
                      details on the origin of the VM (e.g. vm.origin.id, vm.origin.name, vm.origin.type).
                      A map that contains metadata that is automatically added by VCD (10.5.1+) and provides details on the origin of the VM
                    type: object
                    x-kubernetes-map-type: granular
                  internalDisk:
                    description: |-
                      (v2.7+) A block providing internal disk of VM details. See Internal Disk below for details.
                      A block will show internal disk details
                    items:
                      properties:
                        busNumber:
                          description: Bus number on which to place the disk controller
                          type: number
                        busType:
                          description: |-
                            The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI),
                            sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme. Note nvme requires v3.5.0+ and
                            VCD 10.2.1+
                          type: string
                        diskId:
                          description: (v2.7+) Specifies a unique identifier for this
                            disk in the scope of the corresponding VM.
                          type: string
                        iops:
                          description: Specifies the IOPS for the disk. Default is
                            0.
                          type: number
                        sizeInMb:
                          description: The size of the disk in MB.
                          type: number
                        storageProfile:
                          description: Storage profile to override the default one
                          type: string
                        thinProvisioned:
                          description: (v2.7+) Specifies whether the disk storage
                            is pre-allocated or allocated on demand.
                          type: boolean
                        unitNumber:
                          description: Unit number (slot) on the bus specified by
                            BusNumber.
                          type: number
                      type: object
                    type: array
                  memory:
                    description: |-
                      The amount of RAM (in MB) to allocate to the VM. If memory_hot_add_enabled is true, then memory will be increased without VM power off
                      The amount of RAM (in MB) to allocate to the VM
                    type: number
                  memoryHotAddEnabled:
                    description: |-
                      True if the virtual machine supports addition of memory while powered on. Default is false.
                      True if the virtual machine supports addition of memory while powered on.
                    type: boolean
                  memoryLimit:
                    description: |-
                      The limit (in MB) for how much of memory can be consumed on the underlying virtualization infrastructure. -1 value for unlimited.
                      The limit for how much of memory can be consumed on the underlying virtualization infrastructure. This is only valid when the resource allocation is not unlimited.
                    type: number
                  memoryPriority:
                    description: |-
                      Pre-determined relative priorities according to which the non-reserved portion of this resource is made available to the virtualized workload
                      Pre-determined relative priorities according to which the non-reserved portion of this resource is made available to the virtualized workload
                    type: string
                  memoryReservation:
                    description: |-
                      The amount of RAM (in MB) reservation on the underlying virtualization infrastructure
                      The amount of RAM (in MB) reservation on the underlying virtualization infrastructure
                    type: number
                  memoryShares:
                    description: |-
                      Custom priority for the resource in MB. This is a read-only, unless the memory_priority is "CUSTOM"
                      Custom priority for the resource. This is a read-only, unless the `memory_priority` is CUSTOM
                    type: number
                  metadata:
                    additionalProperties:
                      type: string
                    description: |-
                      (Deprecated; v2.2+) Use metadata_entry instead. Key value map of metadata to assign to this VM
                      Key value map of metadata to assign to this VM
                    type: object
                    x-kubernetes-map-type: granular
                  metadataEntry:
                    description: |-
                      A set of metadata entries to assign. See Metadata section for details.
                      Metadata entries for the given VM
                    items:
                      properties:
                        isSystem:
                          description: |-
                            Domain for this metadata entry. true if it belongs to SYSTEM, false if it belongs to GENERAL.
                            Domain for this metadata entry. true, if it belongs to SYSTEM. false, if it belongs to GENERAL
                          type: boolean
                        key:
                          description: |-
                            Is the unique identifier of this item. It must not contain any spaces.
                            Key of this metadata entry. Required if the metadata entry is not empty
                          type: string
                        type:
                          description: |-
                            Network type, one of: none, vapp or org. none creates a NIC with no network attached. vapp requires name of existing vApp network (created with vcd_vapp_network). org requires attached vApp Org network name (attached with vcd_vapp_org_network).
                            Type of this metadata entry. One of: 'MetadataStringValue', 'MetadataNumberValue', 'MetadataBooleanValue', 'MetadataDateTimeValue'
                          type: string
                        userAccess:
                          description: |-
                            User access level for this metadata entry. One of: PRIVATE (hidden), READONLY (read only), READWRITE (read/write).
                            User access level for this metadata entry. One of: 'READWRITE', 'READONLY', 'PRIVATE'
                          type: string
                        value:
                          description: |-
                            The value for this entry
                            Value of this metadata entry. Required if the metadata entry is not empty
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      A name for the VM, unique within the vApp
                      A name for the VM, unique within the vApp
                    type: string
                  network:
                    description: |-
                      A block to define network interface. Multiple can be used. See Network and
                      example for usage details.
                      A block to define network interface. Multiple can be used.
                    items:
                      properties:
                        adapterType:
                          description: |-
                            Adapter type (names are case insensitive). Some known adapter types - VMXNET3,
                            E1000, E1000E, SRIOVETHERNETCARD, VMXNET2, PCNet32.
                            Network card adapter type. (e.g. 'E1000', 'E1000E', 'SRIOVETHERNETCARD', 'VMXNET3', 'PCNet32')
                          type: string
                        connected:
                          description: |-
                            It defines if NIC is connected or not. Network with ip_allocation_mode=NONE can't be connected by default, please use connected=false in such case.
                            It defines if NIC is connected or not.
                          type: boolean
                        ip:
                          description: |-
                            Settings depend on ip_allocation_mode. Field requirements for each ip_allocation_mode are listed below:
                            IP of the VM. Settings depend on `ip_allocation_mode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
                          type: string
                        ipAllocationMode:
                          description: |-
                            IP address allocation mode. One of POOL, DHCP, MANUAL, NONE:
                            IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
                          type: string
                        isPrimary:
                          description: |-
                            Set to true if network interface should be primary. First network card in the list will be primary by default.
                            Set to true if network interface should be primary. First network card in the list will be primary by default
                          type: boolean
                        mac:
                          description: |-
                            (Computed) Mac address of network interface.
                            Mac address of network interface
                          type: string
                        name:
                          description: |-
                            A name for the VM, unique within the vApp
                            Name of the network this VM should connect to. Always required except for `type` `NONE`
                          type: string
                        secondaryIp:
                          description: |-
                            IPv6 IP address. The same configuration methods as the ones
                            for ip field apply.
                            Secondary (IPv6) IP of the VM. Settings depend on `secondary_ip_allocation_mode`. Omitted or empty for DHCP, POOL, NONE. Required for MANUAL
                          type: string
                        secondaryIpAllocationMode:
                          description: |-
                            IPv6 allocation mode if enabled. Same values as for
                            ip_allocation_mode apply. Default NONE.
                            Secondary (IPv6) IP address allocation mode. One of POOL, DHCP, MANUAL, NONE
                          type: string
                        type:
                          description: |-
                            Network type, one of: none, vapp or org. none creates a NIC with no network attached. vapp requires name of existing vApp network (created with vcd_vapp_network). org requires attached vApp Org network name (attached with vcd_vapp_org_network).
                            Network type to use: 'vapp', 'org' or 'none'. Use 'vapp' for vApp network, 'org' to attach Org VDC network. 'none' for empty NIC.
                          type: string
                      type: object
                    type: array
                  networkDhcpWaitSeconds:
                    description: |-
                      Optional number of seconds to try and wait for DHCP IP (only valid
                      for adapters in network block with ip_allocation_mode=DHCP). It constantly checks if IP is present so the time given
                      is a maximum. VM must be powered on and at least one of the following must be true:
                      Optional number of seconds to try and wait for DHCP IP (valid for 'network' block only)
                    type: number
                  org:
                    description: |-
                      The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organisations
                      The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations
                    type: string
                  osType:
                    description: |-
                      Operating System type. Possible values can be found in Os Types. Required when creating empty VM.
                      Operating System type. Possible values can be found in documentation.
                    type: string
                  overrideTemplateDisk:
                    description: |-
                      Allows to update internal disk in template before first VM boot. Disk is matched by bus_type, bus_number and unit_number. See Override template Disk below for details.
                      A block to match internal_disk interface in template. Multiple can be used. Disk will be matched by bus_type, bus_number and unit_number.
                    items:
                      properties:
                        busNumber:
                          description: |-
                            Bus number on which to place the disk controller
                            The number of the SCSI or IDE controller itself.
                          type: number
                        busType:
                          description: |-
                            The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI),
                            sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme. Note nvme requires v3.5.0+ and
                            VCD 10.2.1+
                            The type of disk controller. Possible values: ide, parallel( LSI Logic Parallel SCSI), sas(LSI Logic SAS (SCSI)), paravirtual(Paravirtual (SCSI)), sata, nvme
                          type: string
                        iops:
                          description: |-
                            Specifies the IOPS for the disk. Default is 0.
                            Specifies the IOPS for the disk. Default is 0.
                          type: number
                        sizeInMb:
                          description: |-
                            The size of the disk in MB.
                            The size of the disk in MB.
                          type: number
                        storageProfile:
                          description: |-
                            Storage profile to override the default one
                            Storage profile to override the VM default one
                          type: string
                        unitNumber:
                          description: |-
                            Unit number (slot) on the bus specified by BusNumber.
                            The device number on the SCSI or IDE controller of the disk.
                          type: number
                      type: object
                    type: array
                  placementPolicyId:
                    description: |-
                      VM placement policy or vGPU policy (3.11+) ID. To be used, it needs to be assigned to Org VDC
                      In this case, if the placement policy is not set, it will pick the VDC default on creation. It must be set explicitly
                      if one wants to update it to another policy (the VM requires at least one Compute Policy), and needs to be set to "" to be removed.
                      VM placement policy ID. Has to be assigned to Org VDC.
                    type: string
                  powerOn:
                    description: |-
                      A boolean value stating if this VM should be powered on. Default is true
                      A boolean value stating if this VM should be powered on
                    type: boolean
                  preventUpdatePowerOff:
                    description: |-
                      True if the update of resource should fail when virtual machine power off needed. Default is false.
                      True if the update of resource should fail when virtual machine power off needed.
                    type: boolean
                  securityTags:
                    description: |-
                      Set of security tags to be managed by the vcd_vapp_vm resource.
                      To remove security_tags you must set security_tags = [] and do not remove the attribute. Removing the attribute will cause the tags to remain unchanged and just stop being managed by this resource.
                      This is to be consistent with existing security tags that were created by the vcd_security_tags resource.
                      Security tags to assign to this VM
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  setExtraConfig:
                    description: |-
                      Set of extra configuration key/values to be added or modified. See Extra Configuration
                      A block to set extra configuration key-value pairs
                    items:
                      properties:
                        key:
                          description: |-
                            Is the unique identifier of this item. It must not contain any spaces.
                            The key of the extra configuration item
                          type: string
                        value:
                          description: |-
                            A value for this item. You can use it to insert new items or modify existing ones. Setting
                            the value to an empty string will remove the item.
                            The value of the extra configuration item. Leaving the `value` field empty will result in the item deletion
                          type: string
                      type: object
                    type: array
                  sizingPolicyId:
                    description: |-
                      VM sizing policy ID. To be used, it needs to be assigned to Org VDC
                      using vcd_org_vdc.vm_sizing_policy_ids (and vcd_org_vdc.default_compute_policy_id to make it default).
                      In this case, if the sizing policy is not set, it will pick the VDC default on creation. It must be set explicitly
                      if one wants to update it to another policy (the VM requires at least one Compute Policy), and needs to be set to "" to be removed.
                      VM sizing policy ID. Has to be assigned to Org VDC.
                    type: string
                  status:
                    description: |-
                      (v3.8+) The vApp status as a numeric code.
                      Shows the status code of the VM
                    type: number
                  statusText:
                    description: |-
                      (v3.8+) The vApp status as text.
                      Shows the status of the VM
                    type: string
                  storageProfile:
                    description: |-
                      Storage profile to override the default one
                      Storage profile to override the default one
                    type: string
                  templateName:
                    description: |-
                      (Deprecated; v2.9+) Use vapp_template_id instead. The name of the vApp Template to use
                      The name of the vApp Template to use
                    type: string
                  vappId:
                    description: |-
                      (v3.12+) Parent vApp ID.
                      ID of parent vApp
                    type: string
                  vappName:
                    description: |-
                      The vApp this VM belongs to.
                      The vApp this VM belongs to - Required, unless it is a standalone VM
                    type: string
                  vappTemplateId:
                    description: |-
                      The URN of the vApp Template to use. You can fetch it using a vcd_catalog_vapp_template data source.
                      The URN of the vApp Template to use
                    type: string
                  vdc:
                    description: |-
                      The name of VDC to use, optional if defined at provider level
                      The name of VDC to use, optional if defined at provider level
                    type: string
                  vmNameInTemplate:
                    description: |-
                      The name of the VM in vApp Template to use. For cases when vApp template has more than one VM.
                      The name of the VM in vApp Template to use. In cases when vApp template has more than one VM
                    type: string
                  vmType:
                    description: |-
                      (3.2+) Type of the VM (either vcd_vapp_vm or vcd_vm).
                      Type of VM: either 'vcd_vapp_vm' or 'vcd_vm'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
